import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, BigNumberish, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../lib.esm/contracts/flow/common.js";
import type { FixedPriceFlow, FixedPriceFlowInterface } from "../../../../lib.esm/contracts/flow/FixedPriceFlow.js";
type FixedPriceFlowConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class FixedPriceFlow__factory extends ContractFactory {
    constructor(...args: FixedPriceFlowConstructorParams);
    getDeployTransaction(blocksPerEpoch_: BigNumberish, deployDelay_: BigNumberish, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(blocksPerEpoch_: BigNumberish, deployDelay_: BigNumberish, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<FixedPriceFlow & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): FixedPriceFlow__factory;
    static readonly bytecode = "0x60e06040523480156200001157600080fd5b5060405162003fe838038062003fe88339810160408190526200003491620000b1565b6000805460ff1916905560a0829052604051829082906103e8906200005990620000a3565b908152602001604051809103906000f0801580156200007c573d6000803e3d6000fd5b506001600160a01b0316608052620000958143620000d6565b60c05250620000fe92505050565b610670806200397883390190565b60008060408385031215620000c557600080fd5b505080516020909101519092909150565b80820180821115620000f857634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a05160c05161380b6200016d600039600081816102cc015281816107a401528181610a6401528181610b4b01528181610da801528181610ebd0152818161105101526114e30152600081816106ba01526110290152600081816105f101526110bc015261380b6000f3fe6080604052600436106101e35760003560e01c8063900cf0cf11610102578063c4d66de811610095578063e63ab1e911610064578063e63ab1e914610653578063ef3e12dc14610675578063f0682054146106a8578063fd54b228146106dc57600080fd5b8063c4d66de8146105bf578063c7dd5221146105df578063ca15c87314610613578063d547741f1461063357600080fd5b80639e62a38e116100d15780639e62a38e1461055c578063a217fddf1461057f578063b464b53e14610594578063b8a409ac146105a957600080fd5b8063900cf0cf146104f05780639010d07c1461050657806391d148541461052657806393e405a01461054657600080fd5b806336568abe1161017a57806377e198241161014957806377e19824146103ff5780637d5907081461041457806380f55605146104a35780638456cb59146104db57600080fd5b806336568abe1461039d57806338d45e10146103bd5780633f4ba83a146103d25780635c975abb146103e757600080fd5b8063231b0268116101b6578063231b0268146102ba578063248a9ca3146102fc5780632f2ff15d1461032d57806331bae1741461034d57600080fd5b806301ffc9a7146101e8578063127f0f071461021d578063158ef93e1461027e57806318a641ef14610298575b600080fd5b3480156101f457600080fd5b5061020861020336600461302c565b61070c565b60405190151581526020015b60405180910390f35b34801561022957600080fd5b50610232610737565b6040516102149190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b34801561028a57600080fd5b506003546102089060ff1681565b3480156102a457600080fd5b506102b86102b3366004613056565b6107a2565b005b3480156102c657600080fd5b506102ee7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610214565b34801561030857600080fd5b506102ee610317366004613056565b6000908152600160208190526040909120015490565b34801561033957600080fd5b506102b8610348366004613086565b61081a565b34801561035957600080fd5b5061036d6103683660046130b2565b610845565b6040805182516001600160801b039081168252602080850151909116908201529181015190820152606001610214565b3480156103a957600080fd5b506102b86103b8366004613086565b6109e8565b3480156103c957600080fd5b506102b8610a62565b3480156103de57600080fd5b506102b8610ab1565b3480156103f357600080fd5b5060005460ff16610208565b34801561040b57600080fd5b50603a546102ee565b34801561042057600080fd5b5061047c61042f366004613056565b6040805180820190915260008082526020820152506000908152604360209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082015290565b6040805182516001600160801b039081168252602093840151169281019290925201610214565b3480156104af57600080fd5b506036546104c3906001600160a01b031681565b6040516001600160a01b039091168152602001610214565b3480156104e757600080fd5b506102b8610ad1565b3480156104fc57600080fd5b506102ee603b5481565b34801561051257600080fd5b506104c36105213660046130db565b610af1565b34801561053257600080fd5b50610208610541366004613086565b610b10565b34801561055257600080fd5b506102ee603c5481565b61056f61056a366004613310565b610b3b565b60405161021494939291906133fc565b34801561058b57600080fd5b506102ee600081565b3480156105a057600080fd5b50610232610d74565b3480156105b557600080fd5b506102ee603a5481565b3480156105cb57600080fd5b506102b86105da36600461347b565b610dfb565b3480156105eb57600080fd5b506104c37f000000000000000000000000000000000000000000000000000000000000000081565b34801561061f57600080fd5b506102ee61062e366004613056565b610e70565b34801561063f57600080fd5b506102b861064e366004613086565b610e87565b34801561065f57600080fd5b506102ee6000805160206137b683398151915281565b610688610683366004613496565b610ead565b604080519485526020850193909352918301526060820152608001610214565b3480156106b457600080fd5b506102ee7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106e857600080fd5b506037546038546106f7919082565b60408051928352602083019190915201610214565b60006001600160e01b03198216635a05180f60e01b1480610731575061073182610fef565b92915050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c081018252603d548152603e546020820152603f548183015290546060820152604154608082015260425460a082015290565b7f00000000000000000000000000000000000000000000000000000000000000004310156107eb5760405162461bcd60e51b81526004016107e2906134d3565b60405180910390fd5b60005b818111610815576107fd611024565b610805575050565b61080e81613520565b90506107ee565b505b50565b6000828152600160208190526040909120015461083681611348565b6108408383611352565b505050565b604080516060810182526000808252602082018190529181019190915261086a610a62565b6037546001600160801b038316106108d05760405162461bcd60e51b8152602060048201526024808201527f5175657269656420706f736974696f6e206578636565647320757070657220626044820152631bdd5b9960e21b60648201526084016107e2565b6044546000905b818111156109a057600060026108ed8484613539565b6108f79190613562565b90506044818154811061090c5761090c613576565b600091825260209182902060408051606081018252600290930290910180546001600160801b038082168552600160801b9091048116948401859052600190910154918301919091529095508616106109715761096a816001613539565b925061099a565b83600001516001600160801b0316856001600160801b03161061099657505050919050565b8091505b506108d7565b60405162461bcd60e51b815260206004820152601b60248201527f43616e206e6f742066696e642070726f70657220636f6e74657874000000000060448201526064016107e2565b6001600160a01b0381163314610a585760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016107e2565b6108158282611374565b7f0000000000000000000000000000000000000000000000000000000000000000431015610aa25760405162461bcd60e51b81526004016107e2906134d3565b610aaa611024565b610aa2575b565b6000805160206137b6833981519152610ac981611348565b610817611396565b6000805160206137b6833981519152610ae981611348565b6108176113e8565b6000828152600260205260408120610b099083611425565b9392505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606080606080610b49611431565b7f0000000000000000000000000000000000000000000000000000000000000000431015610b895760405162461bcd60e51b81526004016107e2906134d3565b84518067ffffffffffffffff811115610ba457610ba46130fd565b604051908082528060200260200182016040528015610bcd578160200160208202803683370190505b5094508067ffffffffffffffff811115610be957610be96130fd565b604051908082528060200260200182016040528015610c12578160200160208202803683370190505b5093508067ffffffffffffffff811115610c2e57610c2e6130fd565b604051908082528060200260200182016040528015610c57578160200160208202803683370190505b5092508067ffffffffffffffff811115610c7357610c736130fd565b604051908082528060200260200182016040528015610c9c578160200160208202803683370190505b50915060005b81811015610d6b57600080600080610cd28b8681518110610cc557610cc5613576565b6020026020010151610ead565b9350935093509350838a8681518110610ced57610ced613576565b60200260200101818152505082898681518110610d0c57610d0c613576565b60200260200101818152505081888681518110610d2b57610d2b613576565b60200260200101818152505080878681518110610d4a57610d4a613576565b6020026020010181815250505050505080610d6490613520565b9050610ca2565b50509193509193565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091527f0000000000000000000000000000000000000000000000000000000000000000431015610de65760405162461bcd60e51b81526004016107e2906134d3565b610dee610a62565b610df6610737565b905090565b60035460ff1615610e5a5760405162461bcd60e51b8152602060048201526024808201527f5a67496e697469616c697a61626c653a20616c726561647920696e697469616c6044820152631a5e995960e21b60648201526084016107e2565b6003805460ff1916600117905561081781611477565b60008181526002602052604081206107319061159d565b60008281526001602081905260409091200154610ea381611348565b6108408383611374565b600080600080610ebb611431565b7f0000000000000000000000000000000000000000000000000000000000000000431015610efb5760405162461bcd60e51b81526004016107e2906134d3565b610f04856115a7565b610f455760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b21039bab136b4b9b9b4b7b760711b60448201526064016107e2565b6000610f50866117be565b9050610f5b8161181c565b610f63610a62565b6000610f6e8761190e565b90506000610f7b88611a42565b603a80549192506001906000610f918385613539565b9250508190555081336001600160a01b03167f167ce04d2aa1981994d3a31695da0d785373335b1078cec239a1a3a2c76755558386888e604051610fd89493929190613617565b60405180910390a396509450925090509193509193565b60006001600160e01b03198216637965db0b60e01b148061073157506301ffc9a760e01b6001600160e01b0319831614610731565b6000807f0000000000000000000000000000000000000000000000000000000000000000603b54600101027f000000000000000000000000000000000000000000000000000000000000000001905043811061108257600091505090565b61108c6037611a76565b60006110986037611ba5565b604051632d287e4360e01b8152600481018290529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632d287e43906024016020604051808303816000875af1158015611105573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111299190613678565b9050603b54811461113c5761113c613691565b6000804361114c86610100613539565b101561117c57507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090508061128b565b506037546040805186406020820181905291810186905260608101929092529060800160408051808303601f190181528282528051602091820120603c80546037805487870187526001600160801b039283168089529083168689018181526000878152604389528981209a519151918616600160801b928716830217909a558851606081018a529283529682019081529681018581526044805460018101825599529051965196831696909216909402949094177f9b22d3d61959b4d3528b1d8ba932c96fbe302b36a1aad1d95cab54f9e0a135ea60029096029586015592517f9b22d3d61959b4d3528b1d8ba932c96fbe302b36a1aad1d95cab54f9e0a135eb9094019390935554905591505b6001603b600082825461129e9190613539565b90915550506040805160c081018252603b5480825260208083018990528284018890526037546060808501829052608080860188905260a0909501889052603d849055603e8b9055603f8a905581865560418790556042889055603a5486518b815293840152948201529283018590529133917fbc8a3fd82465d43f1709e44ed882f7e1af0147274196ef1ec009f5d52ff4e993910160405180910390a360019550505050505090565b6108178133611bdd565b61135c8282611c36565b60008281526002602052604090206108409082611ca1565b61137e8282611cb6565b60008281526002602052604090206108409082611d1d565b61139e611d32565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6113f0611431565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113cb3390565b6000610b098383611d7b565b60005460ff1615610aaf5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107e2565b6001603781905560398054808301825560009182527fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d30155603855603680546001600160a01b0319166001600160a01b0383161790556000603b8190556040805160c0810182529182527f0000000000000000000000000000000000000000000000000000000000000000602083015281016115136037611ba5565b815260016020808301919091527fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060408084018290526060938401919091528351603d5590830151603e5582810151603f55908201519055608081015160415560a00151604255611585600033611da5565b6108176000805160206137b683398151915233611da5565b6000610731825490565b60008160400151516000036115be57506000919050565b60408201518051600491906115d5906001906136a7565b815181106115e5576115e5613576565b602002602001015160200151836040015160008151811061160857611608613576565b60200260200101516020015161161e91906136a7565b1061162b57506000919050565b6040826040015160008151811061164457611644613576565b6020026020010151602001511061165d57506000919050565b60005b600183604001515161167291906136a7565b8110156116e9578260400151818151811061168f5761168f613576565b60200260200101516020015183604001518260016116ad9190613539565b815181106116bd576116bd613576565b602002602001015160200151106116d75750600092915050565b806116e181613520565b915050611660565b5060006116f5836117be565b9050611703610100826136ba565b835111156117145750600092915050565b600060108210156117315761172a6001836136a7565b9050611797565b83604001515160010361174c5761172a600483901c836136a7565b6004846040015160008151811061176557611765613576565b60200260200101516020015161177b91906136a7565b611786906001613539565b611794906001901b836136a7565b90505b6117a3610100826136ba565b8451116117b4575060009392505050565b5060019392505050565b600080805b83604001515181101561181557836040015181815181106117e6576117e6613576565b6020026020010151602001516001901b826118019190613539565b91508061180d81613520565b9150506117c3565b5092915050565b603654604080516330f6284160e11b815290516000926001600160a01b0316916361ec50829160048083019260209291908290030181865afa158015611866573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188a9190613678565b9050600061189882846136ba565b905047478211156118cd57604051637c2e324160e11b81526004810184905260248101859052604481018290526064016107e2565b6036546040516001600160a01b039091169083156108fc029084906000818181858888f19350505050158015611907573d6000803e3d6000fd5b5050505050565b603754600090815b8360400151518110156119ab5760008460400151828151811061193b5761193b613576565b602002602001015160000151905060008560400151838151811061196157611961613576565b6020026020010151602001519050600061198783836037611daf9092919063ffffffff16565b905083600003611995578095505b50505080806119a390613520565b915050611916565b5060006119b882846136a7565b90506000836037600001546119cd91906136a7565b603654604051636d3759b560e11b81526004810186905260248101839052604481018590529192506001600160a01b03169063da6eb36a90606401600060405180830381600087803b158015611a2257600080fd5b505af1158015611a36573d6000803e3d6000fd5b50505050505050919050565b60008160400151604051602001611a5991906136d9565b604051602081830303815290604052805190602001209050919050565b6002810154600182015403611a885750565b60028101805460018084015491926000929091611aa4916136a7565b81548110611ab457611ab4613576565b906000526020600020015490506000611adc60018560010154611ad791906136a7565b611f38565b60018501549091505b83811015611b9a57604080516020808201869052818301859052825180830384018152606090920190925280519101208554611b2590600290841c6136ec565b600003611b6157809350611b3882611f38565b925080866002018381548110611b5057611b50613576565b600091825260209091200155611b87565b856002018281548110611b7657611b76613576565b906000526020600020015493508092505b5080611b9281613520565b915050611ae5565b505050600190910155565b60028101805460009190611bbb906001906136a7565b81548110611bcb57611bcb613576565b90600052602060002001549050919050565b611be78282610b10565b61081557611bf481612b3c565b611bff836020612b4e565b604051602001611c10929190613700565b60408051601f198184030181529082905262461bcd60e51b82526107e291600401613775565b611c408282610b10565b6108155760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000610b09836001600160a01b038416612cea565b611cc08282610b10565b156108155760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610b09836001600160a01b038416612d39565b60005460ff16610aaf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107e2565b6000826000018281548110611d9257611d92613576565b9060005260206000200154905092915050565b6108158282611352565b600080611dc0856000015484612e2c565b90506000611dd16001851b83613539565b6002870154909150611de5906001906136a7565b6001901b811115611e3757611df986611a76565b611e0286612e64565b6002860154611e13906001906136a7565b6001901b811115611e2c57611e2786612e64565b611e02565b600286015460018701555b6002860154611e468786612ef7565b60008087875b84811015611f1a57611e61600288831c6136ec565b600003611eae57818b6002018281548110611e7e57611e7e613576565b600091825260209091200155611e95816001613539565b6001808d0191909155611ea890866136a7565b50611f1a565b8a6002018181548110611ec357611ec3613576565b906000526020600020015493508192508383604051602001611eef929190918252602082015260400190565b6040516020818303038152906040528051906020012091508080611f1290613520565b915050611e4c565b50611f286001891b87613539565b9099555092979650505050505050565b600081600003611f6957507fd397b3b043d87fcd6fad1291ff0bfd16401c274896d8c63a923727f077b8e0b5919050565b81600103611f9857507ff73e6947d7d1628b9976a6e40d7b278a8a16405e96324a68df45b12a51b7cfde919050565b81600203611fc757507fa1520264ae93cac619e22e8718fc4fa7ebdd23f493cad602434d2a58ff4868fb919050565b81600303611ff657507fde5747106ac1194a1fa9071dbd6cf19dc2bc7964497ef0afec7e4bdbcf08c47e919050565b8160040361202557507f09c7082879180d28c789c05fafe7030871c76cedbe82c948b165d6a1d66ac15b919050565b8160050361205457507faa7a02bcf29fba687f84123c808b5b48834ff5395abe98e622fadc14e4180c95919050565b8160060361208357507f7608fd46b710b589e0f2ee5a13cd9c41d432858a30d524f84c6d5db37f66273a919050565b816007036120b257507fa5d9a2f7f3573ac9a1366bc484688b4daf934b87ea9b3bf2e703da8fd9f09708919050565b816008036120e157507f6c1779477f4c3fca26b4607398859a43b90a286ce8062500744bd4949981757f919050565b8160090361211057507f45c22df3d952c33d5edce122eed85e5cda3fd61939e7ad7b3e03b6927bb598ea919050565b81600a0361213f57507fe68d02859bb6211cec64f52368b77d422de3b8eac34bf615942b814b643301b5919050565b81600b0361216e57507f62d78399b954d51cb9728601738ad13ddc43b2300064660716bb661d2f4d686f919050565b81600c0361219d57507f6e250d9abdbbb3993fce08de0395cdb56f0483e67d8762a798de011f6a50866a919050565b81600d036121cc57507f1d1a3a74062fd94078617e33eb901eaf16a830f67c387d8eed342db2ac5e2cc5919050565b81600e036121fb57507f19b3b3886526917eae8650223d0be20a0301be960eb339696e673ad8a804440f919050565b81600f0361222a57507fee9e05df53f10e62a897e5140a3f58732dd849e69cd1d62b21ed80ead711a014919050565b8160100361225957507f2cc7aa6e611a113a34505dc1c96b220f14909b70e2c2c7b1a74655da21013c5e919050565b8160110361228857507f949b52dfece7ca3bad3cb27f7750ecaee64cedb6243a275c35984e92956c530a919050565b816012036122b757507fb2680d060b763b932c150434c3812ba9fbc50937e0ebcf5758de884be81bab65919050565b816013036122e657507f523aebf4a085edbc9c8cdc99c83f46262e5f029b395ff7bf561a48a3f387e6b8919050565b8160140361231557507fc9ab73827ab33c0cedb7ecf0ed2e6e32583c0fe887133a7f381ea4ba84d95b76919050565b8160150361234457507f23eb397dec7e564ebe97f160a5e1081a77d9861f316807079b6be4731beb331e919050565b8160160361237357507fdfa44a274c60f090df034aaf75539fd40e94cfd6362dd53d26ed20c8ad529563919050565b816017036123a257507f15b13ee358e1044a53381243c094e54bf7aceb9b5325a0313d6b85fd44e8b3a5919050565b816018036123d157507f1a7a93871e2daa0f1860aa91d4ece4ccd012dac5fe581176a21b155cfeca6d40919050565b8160190361240057507fb12665fd0b884a7c7d1e0294d369170d7e672d9e125eb87784556305f98292df919050565b81601a0361242f57507f2a5543b0b2f8cf550524390291774f4d6c8c0a25ff5393b09c44d75c92a5bd8e919050565b81601b0361245e57507ff9df1841a6e7164b67a1242f1c74975137085ffd9721831f6c469d3a4d5ba42e919050565b81601c0361248d57507fba24736b1b48246c1f7803be967be43ca0dddc9c2c0687a2957952249bc89371919050565b81601d036124bc57507ff3f706b73790c73ca0a8f0460ac3a2a102e280415586b520e70cd5e8264388b4919050565b81601e036124eb57507fc1f5a9a9f357e1c37814688cf7290c87a264ed3d6174a12b978da1c586f53825919050565b81601f0361251a57507f766f7702e19ce23d426cdad03e4292a5a42c4669420101fed74400ec7cda3ac6919050565b8160200361254957507f070fec213e105b3e4d9b0434ac2fc7ca721d35093dc741fb9419797003e2394a919050565b8160210361257857507f9a7aade05b49e43f5fd3782571cc8c90eadacd5d660b53842b4e5b63d675ae0c919050565b816022036125a757507fb27b35a8236d0f9b6692820429c025ed58ed378dc98d316b762f0c865c68be6f919050565b816023036125d657507fdc567ad38d9b90cc9bea4e0f82ec05eca10b3aa94eddc7b63c4fd20c001bb53b919050565b8160240361260557507fb208dfc457c8b30661ae49544c8e57399818095aab8dd7a426fb8dd56bb8c559919050565b8160250361263457507fc4a72e1ff84f7a22631f3f95c61c392f98f52050360215a9d7e75d79b0bcd2ca919050565b8160260361266357507fbb093ec8c0d7defb1de668b5b5dd4f2619e5cd92d29cc144862364a83ab993a8919050565b8160270361269257507fe341796f2fe3975012c1e6badfa2e9c4523e43f911dc845082c3f4d7b4ff871d919050565b816028036126c157507f42d356a11a0b39243eca3c3263299cb6f8c3e9728af6d9d8b0ddb6d354f1890d919050565b816029036126f057507f0ce506e834e3a50a33f80074bc7fa16cf3c0712b36a41b69699177ea25de6c30919050565b81602a0361271f57507fd8fa5bf130aeb7756b1ed09090cc80ed78dae0617978540f0fabd06dfb978938919050565b81602b0361274e57507feed69a20fe36eb604f2153efa3b01c0e143cdf02229a1b8f741c9c2719059eb0919050565b81602c0361277d57507f303c9c566ebf5bfe252796e5c131a99801226152a514688b5ca6883e99031d88919050565b81602d036127ac57507fc7c3765ba96cfbccf3ae718393fa89791070cc8cd85f280b6ac46aea10d96042919050565b81602e036127db57507f1ca65b0a2b8034ee6bfb1fa4526832304e393af835c2c42b4dace58048746800919050565b81602f0361280a57507f957add5e02350fd47de3a8e1da38fd774ceb31214d5897ed6315740a83cd634a919050565b8160300361283957507f787892cb439d5d358870774e163557cf02ec3cb87be6fde11abf1acee14eeaa4919050565b8160310361286857507f047c0962d4f5c8f60692c587de07739528c4d2059240d61dd34d2a547a438ee6919050565b8160320361289757507fc18727efc9e4df63020dcd90edc17dfd2ad14f02328c912b13898e0b53735556919050565b816033036128c657507fe38b9218987e451effe1648c3c9851ad03b64b052a5a3f5ca30f4d7b1ecf7120919050565b816034036128f557507f0e48ecb1a5418e6218289acc8cf723e67ac6eae3ecb80f644336ab4365a2f2b2919050565b8160350361292457507fd60e66f5b8cd08d71a1a4d7798952a7afa5a6e93a886c587a46a5500ebef4a60919050565b8160360361295357507f5162aa9c31d9105f689cf6e71e19548bc9f0218b7d0f99ff7fa8bc2f19c68462919050565b8160370361298257507f6fa8519b4b0e8fb97a9b618e97627d97b9b9d29d04521fd96472e9c502700568919050565b816038036129b157507f41f5dcf0cdee270a2ad9a5f8130aaaab94b237463e09757c28b0321f09e24eb0919050565b816039036129e057507f87a119239fa90732197108adfd029938b4743874d959d3da79b3a30f4832899e919050565b81603a03612a0f57507f8e96dbaa5c72e84a5297b040ccc1a60750a3201166e3b7740d352837233608a1919050565b81603b03612a3e57507f01605058d167ce967af8c475d2f6c341c3e0b437babf899c9da73a520aa4ecb5919050565b81603c03612a6d57507f04529eb80532c5118949d700d8dfd2aa86850b1c6479b26276b9486784a145ff919050565b81603d03612a9c57507fd191814ad13f27361ae20a46cbac8f6e76c10ebe9af0806d6720492ee2f296f0919050565b81603e03612acb57507fa28df63f78821060570da371c0be1312188346b92a7965cc4b980b26c134a4d7919050565b81603f03612afa57507fb48a92d40b61dc995ceecee4cded6415050dcece448b1e0b5e5b6a0e6981f3ef919050565b60405162461bcd60e51b8152602060048201526012602482015271125b99195e081bdd5d081bd988189bdd5b9960721b60448201526064016107e2565b919050565b60606107316001600160a01b03831660145b60606000612b5d8360026136ba565b612b68906002613539565b67ffffffffffffffff811115612b8057612b806130fd565b6040519080825280601f01601f191660200182016040528015612baa576020820181803683370190505b509050600360fc1b81600081518110612bc557612bc5613576565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612bf457612bf4613576565b60200101906001600160f81b031916908160001a9053506000612c188460026136ba565b612c23906001613539565b90505b6001811115612c9b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612c5757612c57613576565b1a60f81b828281518110612c6d57612c6d613576565b60200101906001600160f81b031916908160001a90535060049490941c93612c9481613788565b9050612c26565b508315610b095760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107e2565b6000818152600183016020526040812054612d3157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610731565b506000610731565b60008181526001830160205260408120548015612e22576000612d5d6001836136a7565b8554909150600090612d71906001906136a7565b9050818114612dd6576000866000018281548110612d9157612d91613576565b9060005260206000200154905080876000018481548110612db457612db4613576565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612de757612de761379f565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610731565b6000915050610731565b600082808203612e40576000915050610731565b612e4b6001826136a7565b831c9050612e5a600182613539565b90921b9392505050565b60028101805490600090612e796001846136a7565b81548110612e8957612e89613576565b60009182526020822001549150612ea4611ad76001856136a7565b9050836002018282604051602001612ec6929190918252602082015260400190565b60408051601f1981840301815291905280516020918201208254600181018455600093845291909220015550505050565b8082600101541115612f07575050565b60028201805460018085015491926000929091612f23916136a7565b81548110612f3357612f33613576565b906000526020600020015490506000612f5660018660010154611ad791906136a7565b60018601549091505b8381101561302457604080516020808201869052818301859052825180830384018152606090920190925280519101208654612f9f90600290841c6136ec565b600003612feb57809350612fb282611f38565b9250858210612fe65780876002018381548110612fd157612fd1613576565b60009182526020909120015550505050505050565b613011565b86600201828154811061300057613000613576565b906000526020600020015493508092505b508061301c81613520565b915050612f5f565b505050505050565b60006020828403121561303e57600080fd5b81356001600160e01b031981168114610b0957600080fd5b60006020828403121561306857600080fd5b5035919050565b80356001600160a01b0381168114612b3757600080fd5b6000806040838503121561309957600080fd5b823591506130a96020840161306f565b90509250929050565b6000602082840312156130c457600080fd5b81356001600160801b0381168114610b0957600080fd5b600080604083850312156130ee57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715613136576131366130fd565b60405290565b6040516060810167ffffffffffffffff81118282101715613136576131366130fd565b604051601f8201601f1916810167ffffffffffffffff81118282101715613188576131886130fd565b604052919050565b600067ffffffffffffffff8211156131aa576131aa6130fd565b5060051b60200190565b600082601f8301126131c557600080fd5b813560206131da6131d583613190565b61315f565b82815260069290921b840181019181810190868411156131f957600080fd5b8286015b8481101561323857604081890312156132165760008081fd5b61321e613113565b8135815284820135858201528352918301916040016131fd565b509695505050505050565b60006060828403121561325557600080fd5b61325d61313c565b90508135815260208083013567ffffffffffffffff8082111561327f57600080fd5b818501915085601f83011261329357600080fd5b8135818111156132a5576132a56130fd565b6132b7601f8201601f1916850161315f565b81815287858386010111156132cb57600080fd5b818585018683013760008583830101528085870152505060408501359250808311156132f657600080fd5b5050613304848285016131b4565b60408301525092915050565b6000602080838503121561332357600080fd5b823567ffffffffffffffff8082111561333b57600080fd5b818501915085601f83011261334f57600080fd5b813561335d6131d582613190565b81815260059190911b8301840190848101908883111561337c57600080fd5b8585015b838110156133b4578035858111156133985760008081fd5b6133a68b89838a0101613243565b845250918601918601613380565b5098975050505050505050565b600081518084526020808501945080840160005b838110156133f1578151875295820195908201906001016133d5565b509495945050505050565b60808152600061340f60808301876133c1565b82810360208481019190915286518083528782019282019060005b818110156134465784518352938301939183019160010161342a565b5050848103604086015261345a81886133c1565b92505050828103606084015261347081856133c1565b979650505050505050565b60006020828403121561348d57600080fd5b610b098261306f565b6000602082840312156134a857600080fd5b813567ffffffffffffffff8111156134bf57600080fd5b6134cb84828501613243565b949350505050565b6020808252601a908201527f436f6e747261637420686173206e6f74206c61756e636865642e000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000600182016135325761353261350a565b5060010190565b808201808211156107315761073161350a565b634e487b7160e01b600052601260045260246000fd5b6000826135715761357161354c565b500490565b634e487b7160e01b600052603260045260246000fd5b60005b838110156135a757818101518382015260200161358f565b50506000910152565b600081518084526135c881602086016020860161358c565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156133f15781518051885283015183880152604090960195908201906001016135f0565b848152836020820152826040820152608060608201528151608082015260006020830151606060a084015261364f60e08401826135b0565b90506040840151607f198483030160c085015261366c82826135dc565b98975050505050505050565b60006020828403121561368a57600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b818103818111156107315761073161350a565b60008160001904831182151516156136d4576136d461350a565b500290565b602081526000610b0960208301846135dc565b6000826136fb576136fb61354c565b500690565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161373881601785016020880161358c565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161376981602884016020880161358c565b01602801949350505050565b602081526000610b0960208301846135b0565b6000816137975761379761350a565b506000190190565b634e487b7160e01b600052603160045260246000fdfe65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862aa2646970667358221220b817395a09c78411b81f0830a1380707dab6222545310a1c74577851f2d44a7a64736f6c63430008100033608060405234801561001057600080fd5b5060405161067038038061067083398101604081905261002f9161014a565b6100383361009a565b806001600160401b0381111561005057610050610163565b604051908082528060200260200182016040528015610079578160200160208202803683370190505b50805161008e916001916020909101906100ea565b50506000600255610179565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610125579160200282015b8281111561012557825182559160200191906001019061010a565b50610131929150610135565b5090565b5b808211156101315760008155600101610136565b60006020828403121561015c57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b6104e8806101886000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d557806396e494e8146100f0578063e0886f9014610103578063f2fde38b1461011657600080fd5b80631d1a696d146100825780632d287e43146100aa578063715018a6146100cb575b600080fd5b6100956100903660046103e3565b610129565b60405190151581526020015b60405180910390f35b6100bd6100b83660046103e3565b610194565b6040519081526020016100a1565b6100d36101ee565b005b6000546040516001600160a01b0390911681526020016100a1565b6100956100fe3660046103e3565b610202565b6100bd6101113660046103e3565b610237565b6100d36101243660046103fc565b610297565b60008061013d600254600180549050610310565b905060005b8181101561018a57836001828154811061015e5761015e610425565b906000526020600020015403610178575060019392505050565b8061018281610451565b915050610142565b5060009392505050565b6002546001546000919082906101aa908361046a565b905083600182815481106101c0576101c0610425565b90600052602060002001819055506001600260008282546101e1919061048c565b9091555091949350505050565b6101f661032a565b6102006000610384565b565b6001546002546000919083108015610230575080610222600254836103d4565b61022c919061049f565b8310155b9392505050565b600061024282610202565b6102675760405163b52d71f360e01b8152600481018390526024015b60405180910390fd5b60018054610275908461046a565b8154811061028557610285610425565b90600052602060002001549050919050565b61029f61032a565b6001600160a01b0381166103045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025e565b61030d81610384565b50565b600081831061031f5781610321565b825b90505b92915050565b6000546001600160a01b031633146102005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081831161031f5781610321565b6000602082840312156103f557600080fd5b5035919050565b60006020828403121561040e57600080fd5b81356001600160a01b038116811461023057600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016104635761046361043b565b5060010190565b60008261048757634e487b7160e01b600052601260045260246000fd5b500690565b808201808211156103245761032461043b565b818103818111156103245761032461043b56fea2646970667358221220e8ca9fd7cf1cda9c87af618488dd664329a5f2e0ac050a78694b39389150ab1e64736f6c63430008100033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "blocksPerEpoch_";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "deployDelay_";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSubmission";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "price";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "paid";
            readonly type: "uint256";
        }];
        readonly name: "NotEnoughFee";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "startMerkleRoot";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "submissionIndex";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "flowLength";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "context";
            readonly type: "bytes32";
        }];
        readonly name: "NewEpoch";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "Paused";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "role";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "previousAdminRole";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "newAdminRole";
            readonly type: "bytes32";
        }];
        readonly name: "RoleAdminChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "role";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "RoleGranted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "role";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "RoleRevoked";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "identity";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "submissionIndex";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startPos";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "length";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "length";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "tags";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "root";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "height";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct SubmissionNode[]";
                readonly name: "nodes";
                readonly type: "tuple[]";
            }];
            readonly indexed: false;
            readonly internalType: "struct Submission";
            readonly name: "submission";
            readonly type: "tuple";
        }];
        readonly name: "Submit";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "Unpaused";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "DEFAULT_ADMIN_ROLE";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "PAUSER_ROLE";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "length";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "tags";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "root";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "height";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct SubmissionNode[]";
                readonly name: "nodes";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct Submission[]";
            readonly name: "submissions";
            readonly type: "tuple[]";
        }];
        readonly name: "batchSubmit";
        readonly outputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "indexes";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "digests";
            readonly type: "bytes32[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "startIndexes";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "lengths";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "blocksPerEpoch";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "epoch";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "epochStartPosition";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "firstBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getContext";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "epoch";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "mineStart";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "flowRoot";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "flowLength";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockDigest";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "digest";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct MineContext";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "digest";
            readonly type: "bytes32";
        }];
        readonly name: "getEpochRange";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint128";
                readonly name: "start";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "end";
                readonly type: "uint128";
            }];
            readonly internalType: "struct EpochRange";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "role";
            readonly type: "bytes32";
        }];
        readonly name: "getRoleAdmin";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "role";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }];
        readonly name: "getRoleMember";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "role";
            readonly type: "bytes32";
        }];
        readonly name: "getRoleMemberCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "role";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "grantRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "role";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "hasRole";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "market_";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "initialized";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "makeContext";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "cnt";
            readonly type: "uint256";
        }];
        readonly name: "makeContextFixedTimes";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "makeContextWithResult";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "epoch";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "mineStart";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "flowRoot";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "flowLength";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockDigest";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "digest";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct MineContext";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "market";
        readonly outputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "numSubmissions";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pause";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "paused";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint128";
            readonly name: "targetPosition";
            readonly type: "uint128";
        }];
        readonly name: "queryContextAtPosition";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint128";
                readonly name: "start";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "end";
                readonly type: "uint128";
            }, {
                readonly internalType: "bytes32";
                readonly name: "digest";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct EpochRangeWithContextDigest";
            readonly name: "range";
            readonly type: "tuple";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "role";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "renounceRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "role";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "revokeRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "rootHistory";
        readonly outputs: readonly [{
            readonly internalType: "contract IDigestHistory";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "submissionIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "length";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "tags";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "root";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "height";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct SubmissionNode[]";
                readonly name: "nodes";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct Submission";
            readonly name: "submission";
            readonly type: "tuple";
        }];
        readonly name: "submit";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tree";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "currentLength";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "unstagedHeight";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "unpause";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): FixedPriceFlowInterface;
    static connect(address: string, runner?: ContractRunner | null): FixedPriceFlow;
}
export {};
//# sourceMappingURL=FixedPriceFlow__factory.d.ts.map