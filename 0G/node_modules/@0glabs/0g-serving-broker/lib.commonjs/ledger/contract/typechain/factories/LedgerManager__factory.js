"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LedgerManager__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
        ],
        name: 'InsufficientBalance',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
        ],
        name: 'LedgerExists',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
        ],
        name: 'LedgerNotExists',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'uint256[2]',
                name: 'inferenceSigner',
                type: 'uint256[2]',
            },
            {
                internalType: 'string',
                name: 'additionalInfo',
                type: 'string',
            },
        ],
        name: 'addLedger',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'deleteLedger',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'depositFund',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'fineTuningAddress',
        outputs: [
            {
                internalType: 'address payable',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getAllLedgers',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'user',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'availableBalance',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'totalBalance',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256[2]',
                        name: 'inferenceSigner',
                        type: 'uint256[2]',
                    },
                    {
                        internalType: 'string',
                        name: 'additionalInfo',
                        type: 'string',
                    },
                    {
                        internalType: 'address[]',
                        name: 'inferenceProviders',
                        type: 'address[]',
                    },
                    {
                        internalType: 'address[]',
                        name: 'fineTuningProviders',
                        type: 'address[]',
                    },
                ],
                internalType: 'struct Ledger[]',
                name: 'ledgers',
                type: 'tuple[]',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
        ],
        name: 'getLedger',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'user',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'availableBalance',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'totalBalance',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256[2]',
                        name: 'inferenceSigner',
                        type: 'uint256[2]',
                    },
                    {
                        internalType: 'string',
                        name: 'additionalInfo',
                        type: 'string',
                    },
                    {
                        internalType: 'address[]',
                        name: 'inferenceProviders',
                        type: 'address[]',
                    },
                    {
                        internalType: 'address[]',
                        name: 'fineTuningProviders',
                        type: 'address[]',
                    },
                ],
                internalType: 'struct Ledger',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'inferenceAddress',
        outputs: [
            {
                internalType: 'address payable',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_inferenceAddress',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_fineTuningAddress',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'initialized',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'refund',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address[]',
                name: 'providers',
                type: 'address[]',
            },
            {
                internalType: 'string',
                name: 'serviceType',
                type: 'string',
            },
        ],
        name: 'retrieveFund',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'spendFund',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'provider',
                type: 'address',
            },
            {
                internalType: 'string',
                name: 'serviceTypeStr',
                type: 'string',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'transferFund',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        stateMutability: 'payable',
        type: 'receive',
    },
];
const _bytecode = '0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6120708061007e6000396000f3fe6080604052600436106100f75760003560e01c806372adc0d91161008a578063dd8a411811610059578063dd8a41181461028d578063e5d9fdab146102ad578063f2fde38b146102cd578063f7cd6af9146102ed57600080fd5b806372adc0d91461021f5780638d0d8cb6146102475780638da5cb5b1461024f578063c0c53b8b1461026d57600080fd5b806331404a19116100c657806331404a191461019d578063382e1112146101bd578063410b3815146101f5578063715018a61461020a57600080fd5b8063158ef93e146101035780631665c79b14610139578063278ecde11461015b5780632ba43b821461017d57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5060005461012490600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b34801561014557600080fd5b5061014e61031a565b6040516101309190611989565b34801561016757600080fd5b5061017b6101763660046119eb565b61057d565b005b34801561018957600080fd5b5061017b610198366004611ad7565b61061c565b3480156101a957600080fd5b5061017b6101b8366004611b2e565b6109be565b3480156101c957600080fd5b506002546101dd906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b34801561020157600080fd5b5061017b610b5d565b34801561021657600080fd5b5061017b610d8c565b61023261022d366004611bfd565b610da0565b60408051928352602083019190915201610130565b61017b610df3565b34801561025b57600080fd5b506000546001600160a01b03166101dd565b34801561027957600080fd5b5061017b610288366004611c46565b610e6d565b34801561029957600080fd5b5061017b6102a8366004611c89565b610f37565b3480156102b957600080fd5b506001546101dd906001600160a01b031681565b3480156102d957600080fd5b5061017b6102e8366004611cb3565b611047565b3480156102f957600080fd5b5061030d610308366004611cb3565b6110c0565b6040516101309190611cce565b6060600061032661128f565b90508067ffffffffffffffff81111561034157610341611a20565b60405190808252806020026020018201604052801561037a57816020015b61036761173a565b81526020019060019003908161035f5790505b50915060005b8181101561057857610391816112a0565b6040805160e08101825282546001600160a01b031681526001830154602082015260028084015482840152825180840193849052919392606085019291600385019182845b8154815260200190600101908083116103d6575050505050815260200160058201805461040290611ce1565b80601f016020809104026020016040519081016040528092919081815260200182805461042e90611ce1565b801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b50505050508152602001600682018054806020026020016040519081016040528092919081815260200182805480156104dd57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104bf575b505050505081526020016007820180548060200260200160405190810160405280929190818152602001828054801561053f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610521575b50505050508152505083828151811061055a5761055a611d1b565b6020026020010181905250808061057090611d47565b915050610380565b505090565b6000610588336112c3565b905081816001015410156105b65760405163112fed8b60e31b81523360048201526024015b60405180910390fd5b818160010160008282546105ca9190611d60565b92505081905550818160020160008282546105e59190611d60565b9091555050604051339083156108fc029084906000818181858888f19350505050158015610617573d6000803e3d6000fd5b505050565b6000610627336112c3565b9050600080600061063786611318565b60405163147500e360e01b81523360048201526001600160a01b038b81166024830152939650919450925086916060919085169063147500e390604401602060405180830381865afa158015610691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b59190611d73565b156107a157604051631320b9eb60e11b81523360048201526001600160a01b038a811660248301526000919086169063264173d690604401602060405180830381865afa15801561070a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072e9190611d95565b9050600061073c8983611419565b90506107488185611d60565b6040513360248201526001600160a01b038d1660448201526064810183905290945060840160408051601f198184030181529190526020810180516001600160e01b031663745e87f760e01b179052925061089e915050565b8260000361082857338987600301886005016040516024016107c69493929190611e2b565b60408051601f19818403018152919052602080820180516001600160e01b03166312f0ebfd60e21b17905260068801805460018101825560009182529190200180546001600160a01b038c166001600160a01b0319909116179055905061089e565b33898760050160405160240161084093929190611e8d565b60408051601f19818403018152919052602080820180516001600160e01b031663e50688f960e01b17905260078801805460018101825560009182529190200180546001600160a01b038c166001600160a01b031990911617905590505b81866001015410156108e95760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016105ad565b818660010160008282546108fd9190611d60565b925050819055506000856001600160a01b0316838360405161091f9190611eb9565b60006040518083038185875af1925050503d806000811461095c576040519150601f19603f3d011682016040523d82523d6000602084013e610961565b606091505b50509050806109b25760405162461bcd60e51b815260206004820152601d60248201527f43616c6c20746f206368696c6420636f6e7472616374206661696c656400000060448201526064016105ad565b50505050505050505050565b60006109c982611318565b5091505060006109d8336112c3565b90506000805b8551811015610b3c576000846001600160a01b0316634e3c4f2233898581518110610a0b57610a0b611d1b565b60200260200101516040518363ffffffff1660e01b8152600401610a459291906001600160a01b0392831681529116602082015260400190565b6060604051808303816000875af1158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a889190611ed5565b505090508083610a989190611f03565b9250846001600160a01b0316636c79158d33898581518110610abc57610abc611d1b565b60200260200101516040518363ffffffff1660e01b8152600401610af69291906001600160a01b0392831681529116602082015260400190565b600060405180830381600087803b158015610b1057600080fd5b505af1158015610b24573d6000803e3d6000fd5b50505050508080610b3490611d47565b9150506109de565b5080826001016000828254610b519190611f03565b90915550505050505050565b6000610b6833611433565b9050610b7381611467565b610b9257604051637d2d536b60e01b81523360048201526024016105ad565b6000610b9d336112c3565b905060005b6006820154811015610c5a576007546006830180546001600160a01b0390921691639721672591339185908110610bdb57610bdb611d1b565b60009182526020909120015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b158015610c2f57600080fd5b505af1158015610c43573d6000803e3d6000fd5b505050508080610c5290611d47565b915050610ba2565b5060005b6007820154811015610d16576006546007830180546001600160a01b0390921691639721672591339185908110610c9757610c97611d1b565b60009182526020909120015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b158015610ceb57600080fd5b505af1158015610cff573d6000803e3d6000fd5b505050508080610d0e90611d47565b915050610c5e565b50610d22600383611474565b50600082815260056020526040812080546001600160a01b03191681556001810182905560028101829055600381018290556004810182905590610d6a600583016000611786565b610d786006830160006117c0565b610d866007830160006117c0565b50505050565b610d94611480565b610d9e60006114da565b565b6000806000610dae33611433565b9050610db981611467565b15610dd95760405163cde58aa160e01b81523360048201526024016105ad565b610de6813387348861152a565b5034946000945092505050565b6000610dfe33611433565b9050610e0981611467565b610e2857604051637d2d536b60e01b81523360048201526024016105ad565b6000610e33336112c3565b905034816001016000828254610e499190611f03565b9250508190555034816002016000828254610e649190611f03565b90915550505050565b600054600160a01b900460ff1615610ed25760405162461bcd60e51b815260206004820152602260248201527f496e697469616c697a61626c653a20616c726561647920696e697469616c697a604482015261195960f21b60648201526084016105ad565b6000805460ff60a01b1916600160a01b179055610eee816114da565b50600180546001600160a01b039384166001600160a01b031991821681179092556002805493909416928116831790935560068054841690921790915560078054909216179055565b6002546001600160a01b0316331480610f5a57506001546001600160a01b031633145b610fc25760405162461bcd60e51b815260206004820152603360248201527f43616c6c6572206973206e6f74207468652066696e652074756e696e67206f72604482015272081a5b99995c995b98d94818dbdb9d1c9858dd606a1b60648201526084016105ad565b6000610fcd836112c3565b90508181600101548260020154610fe49190611d60565b10156110295760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016105ad565b8181600201600082825461103d9190611d60565b9091555050505050565b61104f611480565b6001600160a01b0381166110b45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ad565b6110bd816114da565b50565b6110c861173a565b6110d1826112c3565b6040805160e08101825282546001600160a01b031681526001830154602082015260028084015482840152825180840193849052919392606085019291600385019182845b815481526020019060010190808311611116575050505050815260200160058201805461114290611ce1565b80601f016020809104026020016040519081016040528092919081815260200182805461116e90611ce1565b80156111bb5780601f10611190576101008083540402835291602001916111bb565b820191906000526020600020905b81548152906001019060200180831161119e57829003601f168201915b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561121d57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111ff575b505050505081526020016007820180548060200260200160405190810160405280929190818152602001828054801561127f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611261575b5050505050815250509050919050565b600061129b6003611594565b905090565b6000806112ae60038461159e565b60009081526005602052604090209392505050565b6000806112cf83611433565b60008181526005602052604090209091506112e982611467565b61131157604051637d2d536b60e01b81526001600160a01b03851660048201526024016105ad565b9392505050565b6000806000808460405160200161132f9190611eb9565b6040516020818303038152906040528051906020012090507f2a52b6261f3850b89541ab4444869004fe552e50532808641800076f8e9ec465810361138d5750506001546007546001600160a01b0391821693501690506000611412565b7f37f0d1f2303720bab95e3c739b15188d8c19fade32eb63f80ef3d06b64daa9d281036113d35750506002546006546001600160a01b0391821693501690506001611412565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642073657276696365207479706560601b60448201526064016105ad565b9193909250565b6000818310611428578161142a565b825b90505b92915050565b604080516001600160a01b038316602082015260009101604051602081830303815290604052805190602001209050919050565b600061142d6003836115aa565b600061142a83836115c2565b6000546001600160a01b03163314610d9e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ad565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600085815260056020526040902060018101839055600280820184905581546001600160a01b0319166001600160a01b03871617825561157090600383019086906117de565b506005810161157f8382611f64565b5061158b6003876116b5565b50505050505050565b600061142d825490565b600061142a83836116c1565b6000818152600183016020526040812054151561142a565b600081815260018301602052604081205480156116ab5760006115e6600183611d60565b85549091506000906115fa90600190611d60565b905081811461165f57600086600001828154811061161a5761161a611d1b565b906000526020600020015490508087600001848154811061163d5761163d611d1b565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061167057611670612024565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061142d565b600091505061142d565b600061142a83836116eb565b60008260000182815481106116d8576116d8611d1b565b9060005260206000200154905092915050565b60008181526001830160205260408120546117325750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561142d565b50600061142d565b6040518060e0016040528060006001600160a01b03168152602001600081526020016000815260200161176b61181c565b81526020016060815260200160608152602001606081525090565b50805461179290611ce1565b6000825580601f106117a2575050565b601f0160209004906000526020600020908101906110bd919061183a565b50805460008255906000526020600020908101906110bd919061183a565b826002810192821561180c579160200282015b8281111561180c5782358255916020019190600101906117f1565b5061181892915061183a565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611818576000815560010161183b565b60005b8381101561186a578181015183820152602001611852565b50506000910152565b6000815180845261188b81602086016020860161184f565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156118d85781516001600160a01b0316875295820195908201906001016118b3565b509495945050505050565b600061010060018060a01b038351168452602080840151818601526040840151604086015260608401516060860160005b600281101561193157825182529183019190830190600101611914565b5050505060808301518160a086015261194c82860182611873565b91505060a083015184820360c0860152611966828261189f565b91505060c083015184820360e0860152611980828261189f565b95945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156119de57603f198886030184526119cc8583516118e3565b945092850192908501906001016119b0565b5092979650505050505050565b6000602082840312156119fd57600080fd5b5035919050565b80356001600160a01b0381168114611a1b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a5f57611a5f611a20565b604052919050565b600082601f830112611a7857600080fd5b813567ffffffffffffffff811115611a9257611a92611a20565b611aa5601f8201601f1916602001611a36565b818152846020838601011115611aba57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611aec57600080fd5b611af584611a04565b9250602084013567ffffffffffffffff811115611b1157600080fd5b611b1d86828701611a67565b925050604084013590509250925092565b60008060408385031215611b4157600080fd5b823567ffffffffffffffff80821115611b5957600080fd5b818501915085601f830112611b6d57600080fd5b8135602082821115611b8157611b81611a20565b8160051b611b90828201611a36565b928352848101820192828101908a851115611baa57600080fd5b958301955b84871015611bcf57611bc087611a04565b82529583019590830190611baf565b9750505086013592505080821115611be657600080fd5b50611bf385828601611a67565b9150509250929050565b60008060608385031215611c1057600080fd5b6040830184811115611c2157600080fd5b8392503567ffffffffffffffff811115611c3a57600080fd5b611bf385828601611a67565b600080600060608486031215611c5b57600080fd5b611c6484611a04565b9250611c7260208501611a04565b9150611c8060408501611a04565b90509250925092565b60008060408385031215611c9c57600080fd5b611ca583611a04565b946020939093013593505050565b600060208284031215611cc557600080fd5b61142a82611a04565b60208152600061142a60208301846118e3565b600181811c90821680611cf557607f821691505b602082108103611d1557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611d5957611d59611d31565b5060010190565b8181038181111561142d5761142d611d31565b600060208284031215611d8557600080fd5b8151801515811461131157600080fd5b600060208284031215611da757600080fd5b5051919050565b60008154611dbb81611ce1565b808552602060018381168015611dd85760018114611df257611e20565b60ff1985168884015283151560051b880183019550611e20565b866000528260002060005b85811015611e185781548a8201860152908301908401611dfd565b890184019650505b505050505092915050565b6001600160a01b0385811682528416602080830191909152600090604083019085835b6002811015611e6b57815484529282019260019182019101611e4e565b5050505060a06080830152611e8360a0830184611dae565b9695505050505050565b6001600160a01b0384811682528316602082015260606040820181905260009061198090830184611dae565b60008251611ecb81846020870161184f565b9190910192915050565b600080600060608486031215611eea57600080fd5b8351925060208401519150604084015190509250925092565b8082018082111561142d5761142d611d31565b601f82111561061757600081815260208120601f850160051c81016020861015611f3d5750805b601f850160051c820191505b81811015611f5c57828155600101611f49565b505050505050565b815167ffffffffffffffff811115611f7e57611f7e611a20565b611f9281611f8c8454611ce1565b84611f16565b602080601f831160018114611fc75760008415611faf5750858301515b600019600386901b1c1916600185901b178555611f5c565b600085815260208120601f198616915b82811015611ff657888601518255948401946001909101908401611fd7565b50858210156120145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c3fbf8cb527de392c00c101a551944befabfff3385d43391c5ff160b5c013d5364736f6c63430008140033';
const isSuperArgs = (xs) => xs.length > 1;
class LedgerManager__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.LedgerManager__factory = LedgerManager__factory;
//# sourceMappingURL=LedgerManager__factory.js.map